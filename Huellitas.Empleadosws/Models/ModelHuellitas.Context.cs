//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Huellitas.Empleadosws.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HuellitasEntities1 : DbContext
    {
        public HuellitasEntities1()
            : base("name=HuellitasEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<Empleado> Empleados { get; set; }
        public virtual DbSet<Mascota> Mascotas { get; set; }
        public virtual DbSet<Producto> Productos { get; set; }
        public virtual DbSet<Servicio> Servicios { get; set; }
        public virtual DbSet<Vacuna> Vacunas { get; set; }
        public virtual DbSet<Estadocita> Estadocitas { get; set; }
        public virtual DbSet<Horacita> Horacitas { get; set; }
        public virtual DbSet<Cita> Citas { get; set; }
        public virtual DbSet<Detalleventa> Detalleventas { get; set; }
        public virtual DbSet<Venta> Ventas { get; set; }
    
        public virtual int Cambiarcita(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cambiarcita", fechaParameter);
        }
    
        public virtual ObjectResult<SP_Mostrarhorarios_Result> SP_Mostrarhorarios(Nullable<System.DateTime> fecha, Nullable<System.TimeSpan> hora)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var horaParameter = hora.HasValue ?
                new ObjectParameter("hora", hora) :
                new ObjectParameter("hora", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Mostrarhorarios_Result>("SP_Mostrarhorarios", fechaParameter, horaParameter);
        }
    }
}
